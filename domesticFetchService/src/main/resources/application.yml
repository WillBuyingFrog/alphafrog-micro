spring:
  application:
    name: domestic-fetch-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${AF_DB_MAIN_HOST}:${AF_DB_MAIN_PORT}/${AF_DB_MAIN_DATABASE}
    username: ${AF_DB_MAIN_USER}
    password: ${AF_DB_MAIN_PASSWORD}
  kafka:
    bootstrap-servers: ${AF_KAFKA_BOOTSTRAP_SERVERS}
    admin:
      auto-create: true
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      max-poll-records: 2
      max-poll-interval-ms: 100000
      session-timeout-ms: 300000
  data:
    redis:
      host: ${AF_REDIS_HOST:127.0.0.1}
      port: 6379
      password: ${AF_REDIS_PASSWORD:default}

mybatis:
  configuration:
    map-underscore-to-camel-case: true


dubbo:
  application:
    name: domestic-fetch-service
  registry:
    address: nacos://${NACOS_ADDRESS:127.0.0.1}:8848?username=${NACOS_USER:nacos}&password=${NACOS_PASSWORD:nacos}
  protocol:
    port: 20882
    name: tri
  consumer:
    check: false

tushare:
  token: ${TUSHARE_TOKEN}